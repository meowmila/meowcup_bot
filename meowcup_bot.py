import asyncio
import logging
from datetime import datetime, timedelta
from aiogram import Bot, Dispatcher, F
from aiogram.enums import ParseMode
from aiogram.types import (
    Message, CallbackQuery, InputFile, InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
)
from aiogram.filters import CommandStart, Command
from aiogram.client.default import DefaultBotProperties

API_TOKEN = "8193369093:AAGaD0CRTKhx2Ma2vhXiuOHjBkrNCQp23AU"
ADMIN_ID = 947800235

bot = Bot(token=API_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

users = set()
tournaments = []
user_state = {}

# /start
@dp.message(CommandStart())
async def start_menu(message: Message):
    users.add((message.from_user.id, message.from_user.username, message.from_user.full_name))
    user_state[message.from_user.id] = {}
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[[KeyboardButton(text="üü¶ –ú–µ–Ω—é")]])
    if message.from_user.id == ADMIN_ID:
        keyboard.keyboard.append([KeyboardButton(text="üîß –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")])
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ù–∞–∂–º–∏—Ç–µ –ú–µ–Ω—é, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:", reply_markup=keyboard)

# –ú–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.message(F.text == "üü¶ –ú–µ–Ω—é")
async def open_user_menu(message: Message):
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üèÜ –¢—É—Ä–Ω–∏—Ä", callback_data="type_tournament")],
        [InlineKeyboardButton(text="üéâ –ò–≤–µ–Ω—Ç", callback_data="type_event")]
    ])
    await message.answer_photo(InputFile("images/select_type.jpg"), caption="üîπ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", reply_markup=kb)

# –®–∞–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–Ω–∞–∑–∞–¥" –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è
@dp.callback_query(F.data.startswith("type_"))
async def choose_format(callback: CallbackQuery):
    user_state[callback.from_user.id]["–¢–∏–ø"] = callback.data.split("_")[1]
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="Duo", callback_data="format_Duo")],
        [InlineKeyboardButton(text="Squad", callback_data="format_Squad")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_start")]
    ])
    await callback.message.edit_text("üîπ –í—ã–±–µ—Ä–∏ —Ñ–æ—Ä–º–∞—Ç:", reply_markup=kb)

@dp.callback_query(F.data.startswith("format_"))
async def choose_date(callback: CallbackQuery):
    user_state[callback.from_user.id]["–§–æ—Ä–º–∞—Ç"] = callback.data.split("_")[1]
    today = datetime.now().date()
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–°–µ–≥–æ–¥–Ω—è", callback_data=f"date_{today.strftime('%d.%m.%Y')}")],
        [InlineKeyboardButton(text="–ó–∞–≤—Ç—Ä–∞", callback_data=f"date_{(today + timedelta(days=1)).strftime('%d.%m.%Y')}")],
        [InlineKeyboardButton(text="–ü–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞", callback_data=f"date_{(today + timedelta(days=2)).strftime('%d.%m.%Y')}")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_format")]
    ])
    await callback.message.edit_text("üîπ –í—ã–±–µ—Ä–∏ –¥–∞—Ç—É:", reply_markup=kb)

# –ê–¥–º–∏–Ω–∫–∞ –∏ –¥—Ä—É–≥–∏–µ —à–∞–≥–∏ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ ‚Äî –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —è –¥–æ–ø–∏—à—É –ø–æ–ª–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É.

# === –ó–∞–ø—É—Å–∫ ===
async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    logging.basicConfig(level=logging.INFO)
    asyncio.run(main())
